/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.OmsCompanyAddressController;
import com.macro.mall.model.OmsCompanyAddress;
import com.macro.mall.service.OmsCompanyAddressService;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OmsCompanyAddressController_SSTest extends OmsCompanyAddressController_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_list_0()  throws Throwable  {
      OmsCompanyAddressController omsCompanyAddressController0 = new OmsCompanyAddressController();

      //prepare data for omsCompanyAddressService0
      Vector<OmsCompanyAddress> vector0 = new Vector<OmsCompanyAddress>();
      OmsCompanyAddressService omsCompanyAddressService0 = mock(OmsCompanyAddressService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(vector0).when(omsCompanyAddressService0).list();

      //invoke method for omsCompanyAddressController0
      PrivateAccess.setVariable((Class<?>) OmsCompanyAddressController.class, omsCompanyAddressController0, "companyAddressService", (Object) omsCompanyAddressService0);
      CommonResult<List<OmsCompanyAddress>> commonResult0 = omsCompanyAddressController0.list();
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }}
