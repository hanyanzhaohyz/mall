/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.macro.mall.dto.ProductAttrInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ProductAttrInfo_SSTest extends ProductAttrInfo_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_setAttributeCategoryId_0()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();
      Long long0 = new Long(0L);

      //invoke method for productAttrInfo0
      productAttrInfo0.setAttributeCategoryId(long0);

      //invoke method for productAttrInfo0
      assertEquals(0L, (long)productAttrInfo0.getAttributeCategoryId());
  }
  @Test(timeout = 4000)
  public void test_setAttributeId_1()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();
      Long long0 = new Long(1290L);

      //invoke method for productAttrInfo0
      productAttrInfo0.setAttributeId(long0);

      //invoke method for productAttrInfo0
      assertEquals(1290L, (long)productAttrInfo0.getAttributeId());
  }
  @Test(timeout = 4000)
  public void test_toString_2()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();
      String string0 = productAttrInfo0.toString();
      assertEquals("ProductAttrInfo(attributeId=null, attributeCategoryId=null)", string0);
  }
  @Test(timeout = 4000)
  public void test_canEqual_3()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();
      Object object0 = PrivateAccess.callMethod((Class<ProductAttrInfo>) ProductAttrInfo.class, productAttrInfo0, "canEqual", (Object) "TV/", (Class<?>) Object.class);
      assertEquals(false, object0);
  }
  @Test(timeout = 4000)
  public void test_equals_4()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();

      //invoke method for productAttrInfo0
      productAttrInfo0.getAttributeCategoryId();
      boolean boolean0 = productAttrInfo0.equals((Object) null);
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_5()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();

      //invoke method for productAttrInfo0
      productAttrInfo0.getAttributeId();

      //invoke method for productAttrInfo0
      productAttrInfo0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_6()  throws Throwable  {
      ProductAttrInfo productAttrInfo0 = new ProductAttrInfo();

      //invoke method for productAttrInfo0
      productAttrInfo0.hashCode();
  }}
