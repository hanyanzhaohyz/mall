/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.common.api.CommonPage;
import com.macro.mall.common.api.CommonResult;
import com.macro.mall.controller.PmsProductCategoryController;
import com.macro.mall.dto.PmsProductCategoryParam;
import com.macro.mall.dto.PmsProductCategoryWithChildrenItem;
import com.macro.mall.model.PmsProductCategory;
import com.macro.mall.service.PmsProductCategoryService;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PmsProductCategoryController_SSTest extends PmsProductCategoryController_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getList_0()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      ArrayList<PmsProductCategory> arrayList0 = new ArrayList<PmsProductCategory>();
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(arrayList0).when(pmsProductCategoryService0).getList(nullable(java.lang.Long.class) , nullable(java.lang.Integer.class) , nullable(java.lang.Integer.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Long long0 = new Long(679L);
      Integer integer0 = new Integer(509);
      CommonResult<CommonPage<PmsProductCategory>> commonResult0 = pmsProductCategoryController0.getList(long0, integer0, integer0);
      assertEquals(200L, commonResult0.getCode());
  }
  @Test(timeout = 4000)
  public void test_listWithChildren_1()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      LinkedList<PmsProductCategoryWithChildrenItem> linkedList0 = new LinkedList<PmsProductCategoryWithChildrenItem>();
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(linkedList0).when(pmsProductCategoryService0).listWithChildren();

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      CommonResult<List<PmsProductCategoryWithChildrenItem>> commonResult0 = pmsProductCategoryController0.listWithChildren();
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }
  @Test(timeout = 4000)
  public void test_getItem_2()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategory pmsProductCategory0 = mock(PmsProductCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(pmsProductCategory0).when(pmsProductCategoryService0).getItem(nullable(java.lang.Long.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Long long0 = new Long(1L);
      CommonResult<PmsProductCategory> commonResult0 = pmsProductCategoryController0.getItem(long0);
      assertEquals(200L, commonResult0.getCode());
  }
  @Test(timeout = 4000)
  public void test_updateNavStatus_3()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1060).when(pmsProductCategoryService0).updateNavStatus(ArgumentMatchers.<java.lang.Long>anyList() , nullable(java.lang.Integer.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Stack<Long> stack0 = new Stack<Long>();
      Integer integer0 = new Integer(1060);
      CommonResult commonResult0 = pmsProductCategoryController0.updateNavStatus(stack0, integer0);
      assertEquals(200L, commonResult0.getCode());
  }
  @Test(timeout = 4000)
  public void test_updateShowStatus_4()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(411).when(pmsProductCategoryService0).updateShowStatus(ArgumentMatchers.<java.lang.Long>anyList() , nullable(java.lang.Integer.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Integer integer0 = new Integer(504);
      CommonResult commonResult0 = pmsProductCategoryController0.updateShowStatus(linkedList0, integer0);
      assertEquals(200L, commonResult0.getCode());
  }
  @Test(timeout = 4000)
  public void test_updateNavStatus_5()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(pmsProductCategoryService0).updateNavStatus(ArgumentMatchers.<java.lang.Long>anyList() , nullable(java.lang.Integer.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Stack<Long> stack0 = new Stack<Long>();
      Integer integer0 = new Integer(0);
      CommonResult commonResult0 = pmsProductCategoryController0.updateNavStatus(stack0, integer0);
      assertEquals("\u64CD\u4F5C\u5931\u8D25", commonResult0.getMessage());
  }
  @Test(timeout = 4000)
  public void test_update_6()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(2147483635).when(pmsProductCategoryService0).update(nullable(java.lang.Long.class) , nullable(com.macro.mall.dto.PmsProductCategoryParam.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Long long0 = new Long(0L);
      PmsProductCategoryParam pmsProductCategoryParam0 = mock(PmsProductCategoryParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      CommonResult commonResult0 = pmsProductCategoryController0.update(long0, pmsProductCategoryParam0);
      assertEquals("\u64CD\u4F5C\u6210\u529F", commonResult0.getMessage());
  }
  @Test(timeout = 4000)
  public void test_delete_7()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1).when(pmsProductCategoryService0).delete(nullable(java.lang.Long.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      Long long0 = new Long(1648L);
      CommonResult commonResult0 = pmsProductCategoryController0.delete(long0);
      assertEquals(200L, commonResult0.getCode());
  }
  @Test(timeout = 4000)
  public void test_create_8()  throws Throwable  {
      PmsProductCategoryController pmsProductCategoryController0 = new PmsProductCategoryController();

      //prepare data for pmsProductCategoryService0
      PmsProductCategoryService pmsProductCategoryService0 = mock(PmsProductCategoryService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(8287).when(pmsProductCategoryService0).create(nullable(com.macro.mall.dto.PmsProductCategoryParam.class));

      //invoke method for pmsProductCategoryController0
      PrivateAccess.setVariable((Class<?>) PmsProductCategoryController.class, pmsProductCategoryController0, "productCategoryService", (Object) pmsProductCategoryService0);
      PmsProductCategoryParam pmsProductCategoryParam0 = mock(PmsProductCategoryParam.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      CommonResult commonResult0 = pmsProductCategoryController0.create(pmsProductCategoryParam0);
      assertEquals(200L, commonResult0.getCode());
  }}
