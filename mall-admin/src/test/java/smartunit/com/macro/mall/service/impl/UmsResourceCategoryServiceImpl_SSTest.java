/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.macro.mall.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.macro.mall.mapper.UmsResourceCategoryMapper;
import com.macro.mall.model.UmsResourceCategory;
import com.macro.mall.service.impl.UmsResourceCategoryServiceImpl;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UmsResourceCategoryServiceImpl_SSTest extends UmsResourceCategoryServiceImpl_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_delete_0()  throws Throwable  {
      UmsResourceCategoryServiceImpl umsResourceCategoryServiceImpl0 = new UmsResourceCategoryServiceImpl();

      //prepare data for umsResourceCategoryMapper0
      UmsResourceCategoryMapper umsResourceCategoryMapper0 = mock(UmsResourceCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(umsResourceCategoryMapper0).deleteByPrimaryKey(nullable(java.lang.Long.class));

      //invoke method for umsResourceCategoryServiceImpl0
      PrivateAccess.setVariable((Class<?>) UmsResourceCategoryServiceImpl.class, umsResourceCategoryServiceImpl0, "resourceCategoryMapper", (Object) umsResourceCategoryMapper0);
      Long long0 = new Long(2160L);
      int int0 = umsResourceCategoryServiceImpl0.delete(long0);
      assertEquals((-1), int0);
  }
  @Test(timeout = 4000)
  public void test_update_1()  throws Throwable  {
      UmsResourceCategoryServiceImpl umsResourceCategoryServiceImpl0 = new UmsResourceCategoryServiceImpl();

      //prepare data for umsResourceCategoryMapper0
      UmsResourceCategoryMapper umsResourceCategoryMapper0 = mock(UmsResourceCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(461845907).when(umsResourceCategoryMapper0).updateByPrimaryKeySelective(nullable(com.macro.mall.model.UmsResourceCategory.class));

      //invoke method for umsResourceCategoryServiceImpl0
      PrivateAccess.setVariable((Class<?>) UmsResourceCategoryServiceImpl.class, umsResourceCategoryServiceImpl0, "resourceCategoryMapper", (Object) umsResourceCategoryMapper0);
      Long long0 = new Long(10L);
      UmsResourceCategory umsResourceCategory0 = mock(UmsResourceCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      int int0 = umsResourceCategoryServiceImpl0.update(long0, umsResourceCategory0);
      assertEquals(461845907, int0);
  }
  @Test(timeout = 4000)
  public void test_create_2()  throws Throwable  {
      UmsResourceCategoryServiceImpl umsResourceCategoryServiceImpl0 = new UmsResourceCategoryServiceImpl();

      //prepare data for umsResourceCategoryMapper0
      UmsResourceCategoryMapper umsResourceCategoryMapper0 = mock(UmsResourceCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(umsResourceCategoryMapper0).insert(nullable(com.macro.mall.model.UmsResourceCategory.class));

      //invoke method for umsResourceCategoryServiceImpl0
      PrivateAccess.setVariable((Class<?>) UmsResourceCategoryServiceImpl.class, umsResourceCategoryServiceImpl0, "resourceCategoryMapper", (Object) umsResourceCategoryMapper0);
      UmsResourceCategory umsResourceCategory0 = mock(UmsResourceCategory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      int int0 = umsResourceCategoryServiceImpl0.create(umsResourceCategory0);
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_listAll_3()  throws Throwable  {
      UmsResourceCategoryServiceImpl umsResourceCategoryServiceImpl0 = new UmsResourceCategoryServiceImpl();

      //prepare data for umsResourceCategoryMapper0
      ArrayList<UmsResourceCategory> arrayList0 = new ArrayList<UmsResourceCategory>();
      UmsResourceCategoryMapper umsResourceCategoryMapper0 = mock(UmsResourceCategoryMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(arrayList0).when(umsResourceCategoryMapper0).selectByExample(nullable(com.macro.mall.model.UmsResourceCategoryExample.class));

      //invoke method for umsResourceCategoryServiceImpl0
      PrivateAccess.setVariable((Class<?>) UmsResourceCategoryServiceImpl.class, umsResourceCategoryServiceImpl0, "resourceCategoryMapper", (Object) umsResourceCategoryMapper0);
      List<UmsResourceCategory> list0 = umsResourceCategoryServiceImpl0.listAll();
      assertTrue(list0.isEmpty());
  }}
